extends Node
# This script handles disabling default touch controls that are auto-generated by Godot

func _ready():
	print("ViewportOptions: Initializing to disable default touch controls")
	
	# Create a delay to ensure the scene is fully loaded
	await get_tree().create_timer(0.2).timeout
	
	# Disable touchscreen controls that might be automatically added in viewport
	if OS.get_name() == "Android" or OS.get_name() == "iOS":
		# Try to disable mobile touch interface
		disable_default_touch_ui()

func disable_default_touch_ui():
	print("ViewportOptions: Disabling default touch UI elements")
	
	# Try to modify project settings at runtime
	if ProjectSettings.has_setting("display/window/handheld/touchscreen_control_view_show"):
		ProjectSettings.set_setting("display/window/handheld/touchscreen_control_view_show", false)
		print("ViewportOptions: Disabled touchscreen_control_view_show")
	
	if ProjectSettings.has_setting("display/window/handheld/touchscreen_control_view_opacity"):
		ProjectSettings.set_setting("display/window/handheld/touchscreen_control_view_opacity", 0.0)
		print("ViewportOptions: Set touchscreen_control_view_opacity to 0")
	
	if ProjectSettings.has_setting("display/window/handheld/touchscreen_button_visibility"):
		ProjectSettings.set_setting("display/window/handheld/touchscreen_button_visibility", false)
		print("ViewportOptions: Disabled touchscreen_button_visibility")
		
	# Remove this line that's causing the error and replace with proper checks
	# if DisplayServer.has_feature("mobile"):
	
	# Search for any TouchScreenButton nodes in the scene and disable them
	var touch_buttons = get_tree().get_nodes_in_group("touchscreen_button")
	for button in touch_buttons:
		button.visible = false
		print("ViewportOptions: Disabled touchscreen button:", button.name)
	
	# Find any control with "jump" in the name
	var all_nodes = get_tree().get_nodes_in_group("Control")
	for node in all_nodes:
		if "jump" in node.name.to_lower():
			node.visible = false
			print("ViewportOptions: Disabled jump control:", node.name)
	
	# Look for any ViewportContainer which might be hosting the touch controls
	var viewport_containers = get_tree().get_nodes_in_group("ViewportContainer")
	for container in viewport_containers:
		if "touch" in container.name.to_lower() or "control" in container.name.to_lower():
			container.visible = false
			print("ViewportOptions: Disabled viewport container:", container.name)
	
	print("ViewportOptions: Touch UI disabling complete")
